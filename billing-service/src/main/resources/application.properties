spring.application.name=billing-service
server.port=8083

# Circuit Breaker
# Active le support des indicateurs de santé pour les Circuit Breakers dans Spring Boot Actuator. Cela permet de surveiller l'état des Circuit Breakers via des points de terminaison Actuator, comme /actuator/health
management.health.circuitbreakers.enabled=true

# Configure le point de terminaison /actuator/health pour qu'il affiche toujours des informations détaillées sur la santé des composants, y compris les Circuit Breakers.
management.endpoint.health.show-details=always

# Configurer les Circuit Breakers pour chaque service
resilience4j.circuitbreaker.instances.customerService.enabled=true

# Active l'enregistrement d'un indicateur de santé spécifique pour l'instance customerService. Cet indicateur permet de suivre l'état du Circuit Breaker (CLOSED, OPEN, ou HALF-OPEN) via l'API Actuator.
resilience4j.circuitbreaker.instances.customerService.register-health-indicator=true

# Définit la taille du buffer circulaire en état Closed (fermé). , Ce buffer conserve les résultats des 10 derniers appels pour calculer le taux d'échec.
resilience4j.circuitbreaker.instances.customerService.ring-buffer-size-in-closed-state=10

# Spécifie la durée (5 secondes) pendant laquelle le Circuit Breaker reste en état Open avant de passer en état Half-Open pour tester si le service est de nouveau fonctionnel.
resilience4j.circuitbreaker.instances.customerService.wait-duration-in-open-state=5s

# Définit le seuil du taux d'échec à 50 % , Si plus de 50 % des appels échouent (en fonction)'
resilience4j.circuitbreaker.instances.customerService.failure-rate-threshold=50

# Définit la taille du buffer circulaire en état Half-Open. , Ce buffer conserve les résultats des 10 derniers appels
resilience4j.circuitbreaker.instances.customerService.sliding-window-size=10

# Définit le nombre minimum d'appels nécessaires pour activer le Circuit Breaker (pour passer en état Open)'
resilience4j.circuitbreaker.instances.customerService.minimum-number-of-calls=5

# Définit si le Circuit Breaker automatiquement transforme le statut Open en Half-Open à la fin de chaque cycle de test (si les appels éch)
resilience4j.circuitbreaker.instances.customerService.automatic-transition-from-open-to-half-open-enabled=true

# Définit le nombre maximum d'appels autorisés en état Half-Open. , Si plus de 3 appels échouent (en fonction)'
resilience4j.circuitbreaker.instances.customerService.permitted-number-of-calls-in-half-open-state=3

# Définit le type de buffer circulaire pour les états Closed, Open et Half-Open. , Le type 'count_based' conserve le nombre d'app'
resilience4j.circuitbreaker.instances.customerService.sliding-window-type=count_based

# Retry
# Active le support des indicateurs de santé pour les réessais dans Spring Boot Actuator. Cela permet de surveiller l'état des réessais via des points de terminaison Actuator, comme /actuator/health'
resilience4j.retry.instances.retrySearchCustomer.max-attempts=3

# Définit le temps d'attente entre les essais de réessai. , Si une tentative échoue, il attend 5 secondes avant la'
resilience4j.retry.instances.retrySearchCustomer.wait-duration=5s

#chercher le config vers le service-config
spring.config.import=optional:configserver:${CONFIG_SERVICE_URL:http://localhost:9999}



